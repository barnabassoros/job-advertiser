version: '3.8'

services:
  traefik:
    image: traefik:v2.6
    container_name: traefik
    command: --api.insecure=true --providers.docker
    ports:
      - '80:80'
      - '8080:8080'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  db:
    image: mysql:8.0.28
    container_name: db
    environment:
      - MYSQL_ROOT_PASSWORD=pw
      - MYSQL_USER=root
    volumes:
      - db:/var/lib/mysql
  mongo:
    image: mongo:5.0
    container_name: mongo
    ports:
      - '3307:27017'
    expose:
      - '27017'
    volumes:
      - mongo:/data/db
  report:
    build: ./reporting-microservice
    container_name: report
    ports:
      - "8081:80"
    expose:
      - '80'
    labels:
      - "traefik.http.routers.reporting.rule=PathPrefix(`/report`)"
      - "traefik.http.routers.reporting.middlewares=test-auth@docker"
    command: dotnet /app/reporting-microservice.dll
  ad:
    build: ./ad-microservice
    container_name: ad
    environment:
      AD_DB_HOST: db
      AD_DB_USER: root
      AD_DB_PASSWORD: pw
      AD_DB_NAME: ad
      AD_DB_PORT: 3306
      BROKER_URL: rabbitmq
      BROKER_USER: root
      BROKER_PW: pw
    expose:
      - '3000'
    labels:
      - "traefik.http.routers.ad.rule=PathPrefix(`/ad`)"
      - "traefik.http.routers.ad.middlewares=test-auth@docker"
    command: npm run start
  registration:
    build: ./register-microservice
    container_name: registration
    environment:
      REGISTER_DB_HOST: "db"
      REGISTER_DB_USER: "root"
      REGISTER_DB_PASSWORD: "pw"
      REGISTER_DB_NAME: "registration"
      REGISTER_DB_PORT: 3306
      BROKER_URL: rabbitmq
      BROKER_USER: root
      BROKER_PW: pw
    expose:
      - '3001'
    labels:
      - "traefik.http.routers.registration.rule=PathPrefix(`/registration`)"
      - "traefik.http.routers.registration.middlewares=test-auth@docker"
    command: npm run start
  review:
    build: ./review-microservice
    container_name: review
    environment:
      REVIEW_DB_HOST: "db"
      REVIEW_DB_USER: "root"
      REVIEW_DB_PASSWORD: "pw"
      REVIEW_DB_NAME: "review"
      REVIEW_DB_PORT: 3306
      BROKER_URL: rabbitmq
      BROKER_USER: root
      BROKER_PW: pw
    expose:
      - '3002'
    labels:
      - "traefik.http.routers.review.rule=PathPrefix(`/review`)"
      - "traefik.http.routers.review.middlewares=test-auth@docker"
    command: npm run start
  auth:
    build: ./auth-microservice
    container_name: auth
    environment:
      AUTH_DB_HOST: "db"
      AUTH_DB_USER: "root"
      AUTH_DB_PASSWORD: "pw"
      AUTH_DB_NAME: "auth"
      AUTH_DB_PORT: 3306
      JWT_SECRET: "JIUzI1NiJ9eyJS"
      GOOGLE_CLIENT_ID: 912838585910-4oknosaesv398s5639o4npmg0qkmhg23.apps.googleusercontent.com
    expose:
      - '3005'
    labels:
      - "traefik.http.routers.auth.rule=PathPrefix(`/auth`)"
      - "traefik.http.middlewares.test-auth.forwardauth.address=http://localhost/auth/verify"
      - "traefik.http.middlewares.test-auth.forwardauth.authResponseHeaders=X-User-Id"
      - "traefik.http.middlewares.test-auth.forwardauth.trustForwardHeader=true"
    command: npm run start
  frontend:
    build: ./frontend
    container_name: frontend
    environment:
      GOOGLE_CLIENT_ID: 912838585910-4oknosaesv398s5639o4npmg0qkmhg23.apps.googleusercontent.com
    volumes:
      - '/frontend/node_modules'
    expose:
      - "81"
    labels:
      - "traefik.http.services.frontend-ad.loadbalancer.server.port=81"
      - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"
  rabbitmq3:
    container_name: rabbitmq
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=root
      - RABBITMQ_DEFAULT_PASS=pw
    ports:
      - '5672:5672'
      - '15672:15672'

volumes:
  db:
  mongo:
