version: '3.8'

services:
  traefik:
    image: traefik:v2.6
    command: --api.insecure=true --providers.docker
    ports:
      - '80:80'
      - '8080:8080'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  db:
    image: mysql:8.0.28
    container_name: db
    environment:
      - MYSQL_ROOT_PASSWORD=pw
      - MYSQL_USER=root
    volumes:
      - db:/var/lib/mysql
  app-ad:
    build: ./ad-microservice
    container_name: app-ad
    environment:
      AD_DB_HOST: db
      AD_DB_USER: root
      AD_DB_PASSWORD: pw
      AD_DB_NAME: ad
      AD_DB_PORT: 3306
    expose:
      - '3000'
    labels:
      - traefik.http.routers.app-ad.rule=PathPrefix(`/ad`)
    command: npm run start
  app-registration:
    build: ./register-microservice
    container_name: app-registration
    environment:
      REGISTER_DB_HOST: "db"
      REGISTER_DB_USER: "root"
      REGISTER_DB_PASSWORD: "pw"
      REGISTER_DB_NAME: "registration"
      REGISTER_DB_PORT: 3306
    expose:
      - '3001'
    labels:
      - traefik.http.routers.app-registration.rule=PathPrefix(`/registration`)
    command: npm run start
  app-review:
    build: ./review-microservice
    container_name: app-review
    environment:
      REVIEW_DB_HOST: "db"
      REVIEW_DB_USER: "root"
      REVIEW_DB_PASSWORD: "pw"
      REVIEW_DB_NAME: "review"
      REVIEW_DB_PORT: 3306
    expose:
      - '3002'
    labels:
      - traefik.http.routers.app-review.rule=PathPrefix(`/review`)
    command: npm run start
  app-auth:
    build: ./auth-microservice
    container_name: app-auth
    environment:
      AUTH_DB_HOST: "db"
      AUTH_DB_USER: "root"
      AUTH_DB_PASSWORD: "pw"
      AUTH_DB_NAME: "auth"
      AUTH_DB_PORT: 3306
    expose:
      - '3005'
    labels:
      - traefik.http.routers.app-auth.rule=PathPrefix(`/auth`)
    command: npm run start
  frontend:
    build: ./frontend
    container_name: frontend
    volumes:
      - '/frontend/node_modules'
    labels:
      - traefik.http.routers.frontend.rule=PathPrefix(`/`)
volumes:
  db:
